name: Wheels Build Linux aarch64
on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/wheels_v2.yml

jobs:

  Build-Wheels:
    timeout-minutes: 60
    runs-on: 'ubuntu-22.04-arm'
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Prune stale docker containers
        run: |
          # If cibuildwheel crashes (or, say, is OOM-killed), it leaves behind a
          # docker container.  Eventually these consume all the disk space on
          # this machine.
          docker container prune -f

      - name: Checkout
        uses: actions/checkout@v4

      # The LATEST_DATE here should be kept in sync with the one in Patch setup.py
      - id: check-version
        name: Check latest version
        run: |
          export PACKAGE_DATE=$(python3 -m pip install --user --index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/Triton-Nightly/pypi/simple/ --dry-run triton-nightly== |& grep -oP '(?<=, )[0-9\.]+dev[0-9]+(?=\))' | grep -oP '(?<=dev)[0-9]+')
          export LATEST_DATE=$(TZ=UTC0 git show --quiet --date='format-local:%Y%m%d%H%M%S' --format="%cd")
          if cmp -s <(echo $PACKAGE_DATE) <(echo $LATEST_DATE); then
            echo "new_commit=false" >> "$GITHUB_OUTPUT"
          else
            echo "new_commit=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Patch setup.py
        if: ${{ steps.check-version.outputs.new_commit == 'true' }}
        run: |
          echo "" >> python/setup.cfg
          echo "[build_ext]" >> python/setup.cfg
          echo "base-dir=/project" >> python/setup.cfg

      - name: Build wheels
        if: ${{ steps.check-version.outputs.new_commit == 'true' }}
        run: |
          # Make sure cibuildwheel is updated to latest, this will enable latest python builds
          python3 -m pip install cibuildwheel --upgrade --user
          export LATEST_DATE=$(TZ=UTC0 git show --quiet --date='format-local:%Y%m%d%H%M%S' --format="%cd")
          # Pass MAX_JOBS=4 because, at time of writing, the VM "only" has 32GB
          # of RAM and OOMs while building if we give it the default number of
          # workers (2 * NUM_CPUs).
          export CIBW_ENVIRONMENT="MAX_JOBS=4 \
                  TRITON_WHEEL_NAME=triton-nightly \
                  TRITON_WHEEL_VERSION_SUFFIX=-$LATEST_DATE \
                  TRITON_BUILD_WITH_CLANG_LLD=1"
          export CIBW_MANYLINUX_AARCH64_IMAGE="quay.io/pypa/manylinux_2_28_aarch64:latest"
          # many_linux_2_28 image comes with GCC 12.2.1, but not clang.
          # With this install, it gets clang 16.0.6.
          export CIBW_BEFORE_ALL="dnf install clang lld -y";
          export CIBW_SKIP="cp{35,36,37,38}-*"
          export CIBW_BUILD="cp3{9,10,11,12,13,13t}-manylinux_aarch64"
          export CIBW_FREE_THREADED_SUPPORT=1
          export CIBW_ARCHS_LINUX="aarch64"

          python3 -m cibuildwheel python --output-dir wheelhouse
